{"version":3,"sources":["App.js","index.js"],"names":["App","mount","useRef","useState","loaded","setLoaded","useEffect","current","scene","THREE","camera","window","innerWidth","innerHeight","renderer","setPixelRatio","devicePixelRatio","setSize","appendChild","domElement","position","setZ","geometry","material","color","torus","add","pointLight","set","ambientLight","lightHelper","gridHelper","controls","OrbitControls","GLTFLoader","load","process","gltf","console","log","character","children","scale","xhr","error","animate","requestAnimationFrame","rotation","x","y","update","render","className","toFixed","ref","ReactDOM","StrictMode","document","getElementById"],"mappings":"wNAmFeA,MA3Ef,WACE,IAAIC,EAAQC,iBAAO,MADN,EAEeC,mBAAS,GAFxB,mBAENC,EAFM,KAEEC,EAFF,KAmEb,OA/DAC,qBAAU,WACR,IAAKL,EAAMM,QAAS,CAClB,IAAIC,EAAQ,IAAIC,KACZC,EAAS,IAAID,IACf,GACAE,OAAOC,WAAaD,OAAOE,YAC3B,GACA,KAEEC,EAAW,IAAIL,KACnBK,EAASC,cAAcJ,OAAOK,kBAC9BF,EAASG,QAAQN,OAAOC,WAAYD,OAAOE,aAC3CZ,EAAMiB,YAAYJ,EAASK,YAC3BT,EAAOU,SAASC,KAAK,IAErB,IAAIC,EAAW,IAAIb,KAAoB,GAAI,EAAG,GAAI,KAC9Cc,EAAW,IAAId,IAA2B,CAAEe,MAAO,WACnDC,EAAQ,IAAIhB,IAAWa,EAAUC,GACrCf,EAAMkB,IAAID,GAEV,IAAME,EAAa,IAAIlB,IAAiB,UACxCkB,EAAWP,SAASQ,IAAI,EAAG,EAAG,GAC9B,IAAMC,EAAe,IAAIpB,IAAmB,UAC5CD,EAAMkB,IAAIC,EAAYE,GAEtB,IAAMC,EAAc,IAAIrB,IAAuBkB,GACzCI,EAAa,IAAItB,IAAiB,IAAK,IAC7CD,EAAMkB,IAAII,EAAaC,GAEvB,IAAMC,EAAW,IAAIC,IAAcvB,EAAQI,EAASK,aAEvC,IAAIe,KACVC,KAAP,UACKC,gBADL,qBAEE,SAAUC,GACRC,QAAQC,IAAIF,GACZ,IAAIG,EAAYH,EAAK7B,MAAMiC,SAAS,GACpCD,EAAUpB,SAASQ,IAAI,EAAG,EAAG,GAC7BY,EAAUE,MAAMd,IAAI,EAAG,EAAG,GAC1BpB,EAAMkB,IAAIW,EAAK7B,UAEjB,SAAUmC,GACRtC,EAAUsC,EAAIvC,OAAJ,YAEZ,SAAUwC,GACRN,QAAQM,MAAMA,OAIJ,SAAVC,IACFC,sBAAsBD,GACtBpB,EAAMsB,SAASC,GAAK,IACpBvB,EAAMsB,SAASE,GAAK,KACpBxB,EAAMsB,SAASE,GAAK,IAEpBjB,EAASkB,SAETpC,EAASqC,OAAO3C,EAAOE,GAEzBmC,MAED,CAAC5C,IAGF,sBAAKmD,UAAU,MAAf,UACE,qBAAIA,UAAU,SAAd,UAAwBhD,EAAOiD,QAAQ,GAAvC,gBACA,qBAAKD,UAAU,SAASE,IAAK,SAACA,GAAD,OAAUrD,EAAQqD,SCzErDC,IAASJ,OACP,cAAC,IAAMK,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1a729370.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport * as THREE from \"three\";\n\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\nimport \"./App.css\";\n\nfunction App() {\n  let mount = useRef(null);\n  const [loaded, setLoaded] = useState(0);\n\n  useEffect(() => {\n    if (!mount.current) {\n      var scene = new THREE.Scene();\n      var camera = new THREE.PerspectiveCamera(\n        75,\n        window.innerWidth / window.innerHeight,\n        0.1,\n        1000\n      );\n      var renderer = new THREE.WebGLRenderer();\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      mount.appendChild(renderer.domElement);\n      camera.position.setZ(30);\n\n      var geometry = new THREE.TorusGeometry(10, 3, 16, 100);\n      var material = new THREE.MeshStandardMaterial({ color: 0xff3647 });\n      var torus = new THREE.Mesh(geometry, material);\n      scene.add(torus);\n\n      const pointLight = new THREE.PointLight(0xffffff);\n      pointLight.position.set(5, 5, 5);\n      const ambientLight = new THREE.AmbientLight(0xffffff);\n      scene.add(pointLight, ambientLight);\n\n      const lightHelper = new THREE.PointLightHelper(pointLight);\n      const gridHelper = new THREE.GridHelper(200, 50);\n      scene.add(lightHelper, gridHelper);\n\n      const controls = new OrbitControls(camera, renderer.domElement);\n\n      let loader = new GLTFLoader();\n      loader.load(\n        `${process.env.PUBLIC_URL}/assets/char.glb`,\n        function (gltf) {\n          console.log(gltf);\n          let character = gltf.scene.children[0];\n          character.position.set(0, 0, 0);\n          character.scale.set(3, 3, 3);\n          scene.add(gltf.scene);\n        },\n        function (xhr) {\n          setLoaded(xhr.loaded / (1024 * 1024));\n        },\n        function (error) {\n          console.error(error);\n        }\n      );\n\n      var animate = function () {\n        requestAnimationFrame(animate);\n        torus.rotation.x += 0.01;\n        torus.rotation.y += 0.005;\n        torus.rotation.y += 0.01;\n\n        controls.update();\n\n        renderer.render(scene, camera);\n      };\n      animate();\n    }\n  }, [mount]);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"header\">{loaded.toFixed(2)} MB loaded</h1>\n      <div className=\"canvas\" ref={(ref) => (mount = ref)} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}